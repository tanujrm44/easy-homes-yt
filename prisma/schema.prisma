// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Type {
  RENT
  SALE
}

enum BHK {
  ONE_RK
  ONE_BHK
  TWO_BHK
  THREE_BHK
  FOUR_BHK
}

enum Parking {
  YES
  NO
}

enum PreferredTenants {
  FAMILY
  BACHELORS
}

enum PropertyType {
  APARTMENT
  INDEPENDENT
}

model Images {
  id         Int      @id @default(autoincrement())
  url        String
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId Int
}

model Property {
  id               Int              @id @default(autoincrement())
  name             String
  description      String?          @db.Text
  type             Type
  price            Float
  street           String
  city             String
  state            String
  zipcode          String
  bhk              BHK
  area             Int
  parking          Parking
  images           Images[]
  preferredTenants PreferredTenants
  propertyType     PropertyType
  availableFrom    DateTime
  isFeatured       Boolean          @default(false)
  savedBy          User[]           @relation("UserSavedProperty")
  isSold           Boolean          @default(false)
  owner            User             @relation(fields: [ownerId], references: [id])
  ownerId          Int
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model User {
  id              Int        @id @default(autoincrement())
  email           String     @unique
  username        String
  image           String?
  savedProperties Property[] @relation("UserSavedProperty")
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  property        Property[]
}
